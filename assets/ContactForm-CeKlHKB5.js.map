{"version":3,"file":"ContactForm-CeKlHKB5.js","sources":["../../src/components/common/ContactForm.tsx"],"sourcesContent":["import { useState } from 'react';\nimport type { FormEvent } from 'react';\n\ninterface FormField {\n  id: string;\n  label: string;\n  type: 'text' | 'email' | 'tel' | 'textarea' | 'select';\n  placeholder?: string;\n  required?: boolean;\n  options?: { value: string; label: string }[];\n}\n\ninterface ContactFormProps {\n  title: string;\n  description: string;\n  fields: FormField[];\n  submitButtonText: string;\n  successMessage: string;\n}\n\nconst ContactForm = ({ \n  title, \n  description, \n  fields, \n  submitButtonText, \n  successMessage \n}: ContactFormProps) => {\n  const [formData, setFormData] = useState<Record<string, string>>({});\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { id, value } = e.target;\n    setFormData(prev => ({ ...prev, [id]: value }));\n    \n    // Clear the error for this field when user types\n    if (errors[id]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[id];\n        return newErrors;\n      });\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n    fields.forEach(field => {\n      if (field.required && (!formData[field.id] || formData[field.id].trim() === '')) {\n        newErrors[field.id] = 'Bu alan zorunludur.';\n      }\n      \n      if (field.type === 'email' && formData[field.id] && !formData[field.id].includes('@')) {\n        newErrors[field.id] = 'Geçerli bir e-posta adresi giriniz.';\n      }\n      \n      if (field.type === 'tel' && formData[field.id] && !/^\\+?[0-9\\s-()]+$/.test(formData[field.id])) {\n        newErrors[field.id] = 'Geçerli bir telefon numarası giriniz.';\n      }\n    });\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    // Simulate form submission\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    setIsSubmitting(false);\n    setIsSubmitted(true);\n    setFormData({});\n    \n    // Reset the form after 5 seconds\n    setTimeout(() => {\n      setIsSubmitted(false);\n    }, 5000);\n  };\n\n  return (\n    <div className=\"bg-white p-8 rounded-lg shadow-md\">\n      <h2 className=\"text-2xl font-bold text-navy mb-2\">{title}</h2>\n      <p className=\"text-gray-600 mb-6\">{description}</p>\n      \n      {isSubmitted ? (\n        <div className=\"p-4 bg-green-100 border border-green-300 text-green-700 rounded-lg mb-6\">\n          <p className=\"font-medium\">{successMessage}</p>\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <div className=\"space-y-4\">\n            {fields.map(field => (\n              <div key={field.id}>\n                <label \n                  htmlFor={field.id}\n                  className=\"block text-gray-700 font-medium mb-1\"\n                >\n                  {field.label} {field.required && <span className=\"text-red-500\">*</span>}\n                </label>\n                \n                {field.type === 'textarea' ? (\n                  <textarea\n                    id={field.id}\n                    rows={4}\n                    placeholder={field.placeholder}\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring focus:ring-turquoise-100 focus:border-turquoise transition ${\n                      errors[field.id] ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                    value={formData[field.id] || ''}\n                    onChange={handleChange}\n                  />\n                ) : field.type === 'select' ? (\n                  <select\n                    id={field.id}\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring focus:ring-turquoise-100 focus:border-turquoise transition ${\n                      errors[field.id] ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                    value={formData[field.id] || ''}\n                    onChange={handleChange}\n                  >\n                    <option value=\"\">Lütfen seçin</option>\n                    {field.options?.map(option => (\n                      <option key={option.value} value={option.value}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </select>\n                ) : (\n                  <input\n                    type={field.type}\n                    id={field.id}\n                    placeholder={field.placeholder}\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring focus:ring-turquoise-100 focus:border-turquoise transition ${\n                      errors[field.id] ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                    value={formData[field.id] || ''}\n                    onChange={handleChange}\n                  />\n                )}\n                \n                {errors[field.id] && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors[field.id]}</p>\n                )}\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"mt-6\">\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={`bg-turquoise hover:bg-opacity-80 text-white font-bold py-3 px-6 rounded-lg transition duration-300 w-full ${\n                isSubmitting ? 'opacity-70 cursor-not-allowed' : ''\n              }`}\n            >\n              {isSubmitting ? 'Gönderiliyor...' : submitButtonText}\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"names":["ContactForm","title","description","fields","submitButtonText","successMessage","formData","setFormData","useState","errors","setErrors","isSubmitted","setIsSubmitted","isSubmitting","setIsSubmitting","handleChange","id","value","prev","newErrors","validateForm","field","handleSubmit","resolve","jsxs","jsx","_a","option"],"mappings":"+CAoBA,MAAMA,EAAc,CAAC,CACnB,MAAAC,EACA,YAAAC,EACA,OAAAC,EACA,iBAAAC,EACA,eAAAC,CACF,IAAwB,CACtB,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAiC,CAAA,CAAE,EAC7D,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAiC,CAAA,CAAE,EACzD,CAACG,EAAaC,CAAc,EAAIJ,EAAAA,SAAS,EAAK,EAC9C,CAACK,EAAcC,CAAe,EAAIN,EAAAA,SAAS,EAAK,EAEhDO,EAAgB,GAAqF,CACzG,KAAM,CAAE,GAAAC,EAAI,MAAAC,CAAM,EAAI,EAAE,OACZV,EAAAW,IAAS,CAAE,GAAGA,EAAM,CAACF,CAAE,EAAGC,GAAQ,EAG1CR,EAAOO,CAAE,GACXN,EAAkBQ,GAAA,CACV,MAAAC,EAAY,CAAE,GAAGD,CAAK,EAC5B,cAAOC,EAAUH,CAAE,EACZG,CAAA,CACR,CAEL,EAEMC,EAAe,IAAM,CACzB,MAAMD,EAAoC,CAAC,EAC3C,OAAAhB,EAAO,QAAiBkB,GAAA,CAClBA,EAAM,WAAa,CAACf,EAASe,EAAM,EAAE,GAAKf,EAASe,EAAM,EAAE,EAAE,SAAW,MAChEF,EAAAE,EAAM,EAAE,EAAI,uBAGpBA,EAAM,OAAS,SAAWf,EAASe,EAAM,EAAE,GAAK,CAACf,EAASe,EAAM,EAAE,EAAE,SAAS,GAAG,IACxEF,EAAAE,EAAM,EAAE,EAAI,uCAGpBA,EAAM,OAAS,OAASf,EAASe,EAAM,EAAE,GAAK,CAAC,mBAAmB,KAAKf,EAASe,EAAM,EAAE,CAAC,IACjFF,EAAAE,EAAM,EAAE,EAAI,wCACxB,CACD,EAEDX,EAAUS,CAAS,EACZ,OAAO,KAAKA,CAAS,EAAE,SAAW,CAC3C,EAEMG,EAAe,MAAO,GAAiB,CAC3C,EAAE,eAAe,EAEZF,MAILN,EAAgB,EAAI,EAGpB,MAAM,IAAI,QAAQS,GAAW,WAAWA,EAAS,GAAI,CAAC,EAEtDT,EAAgB,EAAK,EACrBF,EAAe,EAAI,EACnBL,EAAY,CAAA,CAAE,EAGd,WAAW,IAAM,CACfK,EAAe,EAAK,GACnB,GAAI,EACT,EAGE,OAAAY,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAqC,SAAMxB,EAAA,EACxDwB,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAsB,SAAYvB,EAAA,EAE9CS,EACCc,EAAAA,IAAC,MAAI,CAAA,UAAU,0EACb,SAACA,EAAAA,IAAA,IAAA,CAAE,UAAU,cAAe,WAAe,CAC7C,CAAA,EAECD,EAAAA,KAAA,OAAA,CAAK,SAAUF,EACd,SAAA,CAAAG,EAAAA,IAAC,OAAI,UAAU,YACZ,WAAO,IAAIJ,wBACT,MACC,CAAA,SAAA,CAAAG,EAAA,KAAC,QAAA,CACC,QAASH,EAAM,GACf,UAAU,uCAET,SAAA,CAAMA,EAAA,MAAM,IAAEA,EAAM,UAAYI,EAAAA,IAAC,OAAK,CAAA,UAAU,eAAe,SAAC,GAAA,CAAA,CAAA,CAAA,CACnE,EAECJ,EAAM,OAAS,WACdI,EAAA,IAAC,WAAA,CACC,GAAIJ,EAAM,GACV,KAAM,EACN,YAAaA,EAAM,YACnB,UAAW,4GACTZ,EAAOY,EAAM,EAAE,EAAI,iBAAmB,iBACxC,GACA,MAAOf,EAASe,EAAM,EAAE,GAAK,GAC7B,SAAUN,CAAA,CAAA,EAEVM,EAAM,OAAS,SACjBG,EAAA,KAAC,SAAA,CACC,GAAIH,EAAM,GACV,UAAW,4GACTZ,EAAOY,EAAM,EAAE,EAAI,iBAAmB,iBACxC,GACA,MAAOf,EAASe,EAAM,EAAE,GAAK,GAC7B,SAAUN,EAEV,SAAA,CAACU,EAAA,IAAA,SAAA,CAAO,MAAM,GAAG,SAAY,eAAA,GAC5BC,EAAAL,EAAM,UAAN,YAAAK,EAAe,IAAIC,GACjBF,EAAAA,IAAA,SAAA,CAA0B,MAAOE,EAAO,MACtC,SAAAA,EAAO,KADG,EAAAA,EAAO,KAEpB,EACD,CAAA,CAAA,EAGHF,EAAA,IAAC,QAAA,CACC,KAAMJ,EAAM,KACZ,GAAIA,EAAM,GACV,YAAaA,EAAM,YACnB,UAAW,4GACTZ,EAAOY,EAAM,EAAE,EAAI,iBAAmB,iBACxC,GACA,MAAOf,EAASe,EAAM,EAAE,GAAK,GAC7B,SAAUN,CAAA,CACZ,EAGDN,EAAOY,EAAM,EAAE,GACdI,EAAAA,IAAC,IAAE,CAAA,UAAU,4BAA6B,SAAAhB,EAAOY,EAAM,EAAE,CAAE,CAAA,CAjDrD,CAAA,EAAAA,EAAM,EAmDhB,EACD,EACH,EAEAI,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAUZ,EACV,UAAW,6GACTA,EAAe,gCAAkC,EACnD,GAEC,WAAe,kBAAoBT,CAAA,CAAA,CAExC,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,CAEJ"}